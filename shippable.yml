resources:
  - name: nightly_trigger
    type: time
    versionTemplate:
      interval: "0 23 * * *"
    flags:
      - nightly_trigger

  - name: release_version
    type: version
    seed:
      versionName: "7.0.4"

jobs:
  - name: prod_release
    type: release
    steps:
      - IN: release_version
        switch: off
      - TASK: managed
        bump: minor

  - name: zero_runCI
    type: runCI
    steps:
      - IN: nightly_trigger
    flags:
      - nightly_trigger

  - name: verify_nightly_trigger
    type: runSh
    steps:
      - IN: nightly_trigger
      - TASK:
          name: "Verify nightly trigger"
          script:
            - echo "Nightly job triggered successfully"
            - uptime
    on_success:
      - script: echo 'succeeded'
    on_failure:
      - script: echo 'failed'
    flags:
      - nightly_trigger

  - name: verify_windows
    type: runSh
    runtime:
      nodePool: cus_win16
    steps:
      - TASK:
          name: "Verify windows job"
          script:
            - Get-Process

  - name: manage_job_state
    type: runSh
    steps:
      - IN: zero_runCI
      - TASK:
          name: "get state from previous run"
          runtime:
            options:
              env:
                - STATE_FILE: "job_state.env"
          script:
            - shipctl copy_file_from_prev_state $STATE_FILE . || true
            - echo "PREVIOUS STATE CONTENT ----> "
            - cat $STATE_FILE
            - echo "SAVING STATE FILE -----> "
            - echo "INDEX=$BUILD_NUMBER" > $STATE_FILE
            - cat $STATE_FILE
            - shipctl copy_file_to_state $STATE_FILE

  - name: manage_job_state_win2k16
    type: runSh
    runtime:
      nodePool: dyn_win16
    steps:
      - IN: zero_runCI
        switch: off
      - TASK:
          name: "get state from previous run"
          runtime:
            options:
              env:
                - STATE_FILE: "job_state.env"
          script:
            - $env:STATE_FILE="job_state.env"
            - $env:DRYDOCK_VER="v5.6.1"
            - $env:SHIPPABLE_VER="v5.6.1"
            - shipctl copy_file_from_prev_state $env:STATE_FILE $(Get-Location)
            - Write-Host "PREVIOUS STATE CONTENT ----> "
            - cat $STATE_FILE
            - Write-Host "SAVING STATE FILE -----> "
            - Write-Host "INDEX=$BUILD_NUMBER" > $env:STATE_FILE
            - cat $env:STATE_FILE
            - shipctl copy_file_to_state $env:STATE_FILE
            - |
              if($env:SHIPPABLE_VER -eq $env:DRYDOCK_VER) {
                Write-Host "Release versions equal"
              else {
                Write-Host "Release versions NOT equal"
              }

##---------------------- runCI configuration ------------------------##
language: python
python:
  - 2.7

build:
  ci:
    - python --version
##---------------------- end runCI configuration --------------------##
